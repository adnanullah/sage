<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Sage.
   -
   - The Initial Developer of the Original Code is
   - Peter Andrews <petea@jhu.edu>.
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   - Peter Andrews <petea@jhu.edu>
   - Erik Arvidsson <erik@eae.net>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<project name="sage" default="build-local">
	
	<property name="build"		location="build"/>
	<property name="src"		location="src"/>
	<property name="gecko-sdk"	location="xulrunner-sdk"/>

  <available file="${gecko-sdk}" type="dir" property="gecko-sdk.available"/>
	
	<!-- create build directories -->
	<target name="init" depends="clean">
		<mkdir dir="${build}"/>
		<mkdir dir="${build}/src"/>
		<mkdir dir="${build}/xpi"/>
		<mkdir dir="${build}/xpi/chrome"/>
	</target>

	<!-- build from local source files -->
	<target name="build-local" depends="init">
		<copy todir="${build}/src">
			<fileset dir="${src}">
				<include name="**"/>
			</fileset>
		</copy>
		<property name="version" value="sage-local"/>
		<condition property="hasComponents"><available file="${build}/src/components" type="dir"/></condition>
		<ant target="xpi"/>
	</target>

	<!-- compile XPCOM typelib files -->
	<target name="compile-idl">
    <fail unless="gecko-sdk.available" message="Gecko SDK missing.  See http://code.google.com/p/sage/wiki/BuildingSage"/>
    <apply executable="python" dir="${src}/components" failonerror="true" verbose="true">
      <arg line="${gecko-sdk}/sdk/bin/typelib.py"/>
      <arg line="-I ${gecko-sdk}/idl"/>
      <arg value="-o"/>
      <targetfile/>
      <srcfile/>
      <fileset dir="${build}/src/components">
        <include name="*.idl"/>
      </fileset>
      <mapper type="glob" from="*.idl" to="${build}/src/components/*.xpt"/>
    </apply>
	</target>

	<!-- copy component files to XPI directory -->
	<target name="build-components" depends="compile-idl" if="hasComponents">
		<mkdir dir="${build}/xpi/components"/>
		<copy todir="${build}/xpi/components">
			<fileset dir="${build}/src/components">
        <include name="*.xpt"/>
				<include name="*.js"/>
			</fileset>
		</copy>
	</target>
	
	<!-- assemeble extension structure -->
	<target name="assemble" depends="build-components">
		<!-- create main jar file -->
		<zip destfile="${build}/xpi/chrome/${ant.project.name}.jar" basedir="${build}/src/sage" compress="true"/>
		
		<!-- copy defaults -->
		<copy todir="${build}/xpi/defaults" failonerror="false">
			<fileset dir="${build}/src/defaults">
				<include name="**"/>
			</fileset>
		</copy>
		
		<!-- copy install meta files -->
		<copy todir="${build}/xpi">
			<fileset dir="${build}/src">
				<include name="install.*"/>
				<include name="chrome.manifest"/>
			</fileset>
		</copy>
	</target>
  
  	<!-- create XPI archive -->
	<target name="xpi" depends="assemble">
		<zip destfile="${build}/${version}.xpi" basedir="${build}/xpi" compress="true"/>
	</target>

	<!-- remove build output -->
	<target name="clean">
		<delete dir="${build}"/>
	</target>

</project>
